{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Node.js API with JWT Authentication",
    "description": "API for managing Users, Roles, Claims, and TestObjects with JWT-based Authentication"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "http://localhost:3001",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "username": { "type": "string", "example": "johndoe" },
          "email":{ "type": "string", "example": "johndoe@example.com", "format": "email" },
          "phone":{ "type": "string", "example": "+1 1234567890"},
          "role": { "type": "string", "example": "admin" }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "admin" }
        }
      },
      "Claim": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "CreateUser" }
        }
      },
      "TestObject": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Test Object 1" },
          "description": { "type": "string", "example": "Test Object 1 description" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Unauthorized" },
          "status": { "type": "integer", "example": 401 }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Allows a new user to register with default role and claims",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" },
                  "email":{ "type": "string", "example": "johndoe@example.com", "format": "email" },
                  "phone":{ "type": "string", "example": "+1 1234567890"}
                },
                "required": ["username", "password", "email", "phone"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "User already exists", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Log in a user",
        "description": "Authenticate a user and return a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful. JWT token returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid username or password", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "description": "Retrieve a user by their ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "User not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID",
        "description": "Update a user by their ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email":{ "type": "string", "example": "johndoe@example.com", "format": "email" },
                  "phone":{ "type": "string", "example": "+1 1234567890"},
                  "role": { "type": "string" }
                },
                "required": ["username", "role", "email", "phone"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "User not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID",
        "description": "Delete a user by their ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "User not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get all roles",
        "description": "Retrieve a list of all roles (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Role" }
                }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "post": {
        "tags": ["Roles"],
        "summary": "Create a new role",
        "description": "Create a new role (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Role created successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get a role by ID",
        "description": "Retrieve a role by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Role ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Role" }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Role not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "put": {
        "tags": ["Roles"],
        "summary": "Update role by ID",
        "description": "Update a role by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Role ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Role updated successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Role not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "delete": {
        "tags": ["Roles"],
        "summary": "Delete a role by ID",
        "description": "Delete a role by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Role ID"
          }
        ],
        "responses": {
          "200": { "description": "Role deleted successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Role not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/claims": {
      "get": {
        "tags": ["Claims"],
        "summary": "Get all claims",
        "description": "Retrieve a list of all claims (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of claims",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Claim" }
                }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "post": {
        "tags": ["Claims"],
        "summary": "Create a new claim",
        "description": "Create a new claim (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Claim created successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/claims/{id}": {
      "get": {
        "tags": ["Claims"],
        "summary": "Get a claim by ID",
        "description": "Retrieve a claim by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Claim ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Claim retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Claim" }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Claim not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "put": {
        "tags": ["Claims"],
        "summary": "Update claim by ID",
        "description": "Update a claim by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Claim ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Claim updated successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Claim not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "delete": {
        "tags": ["Claims"],
        "summary": "Delete a claim by ID",
        "description": "Delete a claim by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Claim ID"
          }
        ],
        "responses": {
          "200": { "description": "Claim deleted successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "Claim not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/testobjects": {
      "get": {
        "tags": ["TestObjects"],
        "summary": "Get all test objects",
        "description": "Retrieve a list of all test objects (User only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of test objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TestObject" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "post": {
        "tags": ["TestObjects"],
        "summary": "Create a test object",
        "description": "Create a new test object (User only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Test object created successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    },
    "/testobjects/{id}": {
      "get": {
        "tags": ["TestObjects"],
        "summary": "Get a TestObject by ID",
        "description": "Retrieve a TestObjects by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "TestObject ID"
          }
        ],
        "responses": {
          "200": {
            "description": "TestObject retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TestObject" }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "TestObject not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "put": {
        "tags": ["TestObjects"],
        "summary": "Update TestObject by ID",
        "description": "Update a TestObject by its ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "TestObject ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "TestObject updated successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "TestObject not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      },
      "delete": {
        "tags": ["TestObjects"],
        "summary": "Delete a TestObject by ID",
        "description": "Delete a TestObject by its ID (Admin only)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "TestObject ID"
          }
        ],
        "responses": {
          "200": { "description": "TestObject deleted successfully" },
          "400": { "description": "Bad request", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "403": { "description": "Forbidden", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "404": { "description": "TestObject not found", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } },
          "500": { "description": "Server error", "content": { "application/json": { "$ref": "#/components/schemas/Error" } } }
        }
      }
    }
  }
}
